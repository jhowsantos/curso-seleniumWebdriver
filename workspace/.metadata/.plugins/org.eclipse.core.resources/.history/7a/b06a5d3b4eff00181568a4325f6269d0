package test;

import org.junit.Assert;
import org.junit.Test;

import main.Funcionario;
import main.Gerente;

public class DarPromocaoTest {

	@Test
	public void testGerenteAutorizadoParaDarPromocao() {

		// Criando um gerente com permissão para dar promoção
		Gerente gerente1 = new Gerente("José", true);
		// Criando um gerente sem permissão para dar promoção
		Gerente gerente2 = new Gerente("Silva", false);

		// Verifica se gerente1 pode dar promoção
		Assert.assertTrue(gerente1.isPodeDarPromocao());

		// Verifica se gerente2 não pode dar promoção
		Assert.assertFalse(gerente2.isPodeDarPromocao());
	}

	@Test
	public void testDarPromocaoEstagiario() {

		// Criando um funcionario estágiario
		Funcionario estagiario = new Funcionario("Junior", "estagiario", 1000, 1);

		if (estagiario.getCargo().equals("estagiario") && estagiario.getTempoDeEmpresa() >= 1) {

			// salario recebe bonificação de R$ 500 por merito			
			estagiario.setSalario(estagiario.getSalario() + 500);
			
			int salario = estagiario.getSalario();
			
			//verifica se salario estágiario recebeu a bonificação correta
			Assert.assertEquals(1500, salario);
		}
	}

	@Test
	public void testDarPromocaoAnalistaJr() {

		// Criando um funcionario analista Junior
		Funcionario analistaJunior = new Funcionario("Lucas", "analistaJr", 2000, 5);
		
		if (analistaJunior.getCargo().equals("analistaJr") && analistaJunior.getTempoDeEmpresa() >= 4) {

			// salario recebe bonificação de R$ 800 por merito			
			analistaJunior.setSalario(analistaJunior.getSalario() + 800);
			
			int salario = analistaJunior.getSalario();
			
			//verifica se salario estágiario recebeu a bonificação correta
			Assert.assertEquals(2800, salario);
		}
	}

	@Test
	public void testDarPromocaoAnalistaSr() {

		// Criando um funcionario analista Senior
		Funcionario analistaSenior = new Funcionario("Junior", "analistaSr", 5000, 10);
	}

	@Test
	public void testDarPromocaoDiretor() {
		// Criando um funcionario Diretor
		Funcionario diretor = new Funcionario("Stark", "diretor", 35000, 25);
	}

}
